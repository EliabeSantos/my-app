import axios from "axios";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import React from "react";
import { useEffect, useState } from "react";
import { GetBroad } from "../services/getBroadId";
import { Videos } from "../services/getVideos";
import {
  ContentContainer,
  InputContainer,
  InputList,
  List,
  MainContainer,
  VideosContainer,
} from "../styles/mainStyle";
const Home: NextPage = () => {
  const [token, setToken] = useState<string>("");
  const [test, setTest] = useState<any>([]);
  const [streamersNames, setStreamersNames] = useState<Array<string>>([]);
  const [broadId, setBroadId] = useState<Array<string>>([]);
  const getTwitchData = async () => {
    console.log(process.env.REACT_APP_CLIENT_SECRET);
    const data = await axios.post(
      "https://id.twitch.tv/oauth2/token",
      {
        client_id: process.env.NEXT_PUBLIC_CLIENTID,
        client_secret: process.env.NEXT_PUBLIC_CLIENTSECRET,
        grant_type: "client_credentials",
      },
      {
        headers: {
          "Content-Type": "application/x-www-form-urlencoded",
        },
      }
    );
    setToken(data.data.access_token);
  };
  useEffect(() => {
    getTwitchData();
  }, []);
  const [name, setName] = useState<string>("");
  const FindId = async () => {
    let controlBroad = [];
    for (let i = 0; i < streamersNames.length; i++) {
      const broad = await GetBroad({
        streamerName: streamersNames[i],
        token: token,
      });
      controlBroad.push(broad.data[0].id);
    }

    setBroadId(controlBroad);
    // console.log("users", usersdata);
    // setBroadId(usersdata.data.data[0].id);
  };

  const GetVideos = async () => {
    let controlVideos = [];

    for (let i = 0; i < broadId.length; i++) {
      const videos = await Videos({
        broadId: broadId[i],
        token: token,
      });
      controlVideos.push(videos.data[0]);
    }

    setTest(controlVideos);
  };

  useEffect(() => {
    if (broadId.length) GetVideos();
  }, [broadId]);

  const HandleAddStreamer = () => {
    setName("");
    setStreamersNames([...streamersNames, name]);
    console.log(streamersNames);
  };
  return (
    <MainContainer>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <List>
        {React.Children.toArray(
          streamersNames.map((name) => (
            <p>
              {name}
              <button>X</button>
            </p>
          ))
        )}
      </List>
      <ContentContainer>
        <InputContainer>
          <InputList>
            <input
              value={name}
              onChange={(e: any) => setName(e.target.value)}
            />
            <button onClick={HandleAddStreamer}>+</button>
          </InputList>
          <button onClick={() => FindId()}>Buscar</button>
        </InputContainer>
        <VideosContainer>
          {test
            ? test.map((x: any, index: number) => {
                return (
                  <div>
                    <iframe
                      key={index}
                      src={`${x?.embed_url}&parent=${process.env.NEXT_PUBLIC_PARENT}`}
                      title="Test"
                      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    ></iframe>
                  </div>
                );
              })
            : null}
        </VideosContainer>
      </ContentContainer>
    </MainContainer>
  );
};

export default Home;
